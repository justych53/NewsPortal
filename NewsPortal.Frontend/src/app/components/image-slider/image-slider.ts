import { Component, OnInit } from '@angular/core';
import { ImageService } from '../../services/image';
import { Image } from '../../services/image'; 

@Component({
  selector: 'app-image-slider',
  templateUrl: './image-slider.html',
  styleUrls: ['./image-slider.scss'],
  standalone: false
})
export class ImageSlider implements OnInit {
  images: Image[] = []; 
  currentIndex = 0;
  loading = true;
  error: string | null = null;

  constructor(private imageService: ImageService) { }

  ngOnInit(): void {
    console.log('üé¨ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–∞–π–¥–µ—Ä–∞');
    this.loadSliderImages();
  }

  handleImageError(image: Image, event: Event): void {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', image.url);

    const imageElement = event.target as HTMLImageElement;
    imageElement.style.display = 'none';

    const errorDiv = document.createElement('div');
    errorDiv.className = 'image-error';
    errorDiv.innerHTML = `
      <p>‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</p>
      <p><small>${image.url}</small></p>
    `;

    imageElement.parentNode?.insertBefore(errorDiv, imageElement.nextSibling);
  }

  loadSliderImages(): void {
    console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞...');
    this.loading = true;
    this.error = null;

    this.imageService.getSliderImages().subscribe({
      next: (images) => {
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', images);

        if (images && images.length > 0) {
          this.images = images;
          console.log(`üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
        } else {
          this.error = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π';
          console.warn('‚ö†Ô∏è –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        }

        this.loading = false;

        if (this.images.length > 0) {
          this.startAutoSlide();
        }
      },
      error: (err) => {
        console.error('‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err);
        this.error = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É';
        this.loading = false;

        this.images = [{
          id: 'fallback',
          url: 'https://localhost:7176/images/957f36b90eecfe955ff5342440e34b1d.jpg'
        }];
      }
    });
  }

  startAutoSlide(): void {
    if (this.images.length > 1) {
      console.log('‚è∞ –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞');
      setInterval(() => {
        this.nextSlide();
      }, 5000);
    }
  }

  nextSlide(): void {
    this.currentIndex = (this.currentIndex + 1) % this.images.length;
  }

  prevSlide(): void {
    this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;
  }

  goToSlide(index: number): void {
    this.currentIndex = index;
  }
}
